services:
  app-backend-miniaps-bot:
    # image: krassor/backend-miniaps-bot:main
    # pull_policy: always

    build:
      context: backend-miniaps-bot
      dockerfile: Dockerfile
    hostname: backend-miniaps-bot
    container_name: backend-miniaps-bot
    restart: always
    ports:
      - "8080:8080"
    environment:
      - CONFIG_FILEPATH=config/
      - CONFIG_FILENAME=config.yml
    # volumes:
    #   - backend-miniaps-bot-data:/etc/backend-miniaps-bot/
    networks:
      - back-tier

#   app-tg-gpt-bot:
#     hostname: app-tg-gpt-bot
#     container_name: app-tg-gpt-bot
#     build:
#       context: tg-gpt-bot
#       dockerfile: Dockerfile
#     ports:
#       - 8080:8080
#     volumes:
#       - ./tg-gpt-bot/config/:/etc/tg-gpt-bot/
#     networks:
#       - back-tier
      
#   app-auth-service:
#     hostname: app-auth-service
#     depends_on:
#       - skygrow-pg
#     container_name: app-auth-service
#     build:
#       context: backend-service-auth
#       dockerfile: Dockerfile
#     ports:
#         - 8011:8011
#     environment:
#       - DB_NAME=
#       - DB_PASSWORD=
#       - DB_USER=
#       - DB_HOST=
#       - DB_PORT=5432
#       - HTTP_PORT=8011
#       - HTTP_HOST_LISTEN=0.0.0.0
#     networks:
#       - back-tier

#   app-calendar-service:
#     hostname: app-calendar-service
#     depends_on:
#       - skygrow-pg
#     container_name: app-calendar-service
#     build:
#       context: backend-service-calendar
#       dockerfile: Dockerfile
#     ports:
#       - 8080:8080
# #    environment:
# #      - DB_NAME=
# #      - DB_PASSWORD=
# #      - DB_USER=
# #      - DB_HOST=
# #      - DB_PORT=5432
# #      - HTTP_PORT=8080
# #      - HTTP_HOST_LISTEN=0.0.0.0
#     networks:
#       - back-tier

#   skygrow-pg:
#     image: postgres
#     hostname: skygrow-pg
#     container_name: skygrow-pg
#     ports:
#       - 5432:5432
#     environment:
#       - POSTGRES_DB=
#       - POSTGRES_USER=
#       - POSTGRES_PASSWORD=
#     # command:
#     #   - 'echo "host skygrowdb krassor all trust" >> /var/lib/postgresql/data/pg_hba.conf'
#     restart: unless-stopped
#     volumes:
#       - pg_data:/var/lib/postgres
#     networks:
#       - back-tier

  # pgadmin:
  #   image: dpage/pgadmin4
  #   depends_on:
  #     - skygrow-pg
  #   hostname: pgadmin
  #   container_name: pgadmin4
  #   restart: always
  #   ports:
  #     - "5050:80"
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: 
  #     PGADMIN_DEFAULT_PASSWORD: 
  #   volumes:
  #     - pgadmin-data:/var/lib/pgadmin
  #   networks:
  #     - back-tier
      
  # portainer:
  #   image: portainer/portainer-ce:latest
  #   hostname: portainer
  #   container_name: portainer
  #   restart: unless-stopped
  #   security_opt:
  #     - no-new-privileges:true
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - ./portainer-data:/data
  #   ports:
  #     - 9090:9000
  #   networks:
  #     - back-tier


  # prometheus:
  #   image: prom/prometheus
  #   hostname: prometheus
  #   container_name: prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #   # ports:
  #   #   - 9090:9090
  #   restart: unless-stopped
  #   volumes:
  #     - ./prometheus:/etc/prometheus
  #     - prom_data:/prometheus
  #   networks:
  #     - back-tier

volumes:
  prom_data: 
  pg_data:
  pgadmin-data:
  # backend-miniaps-bot-data:

networks:
  back-tier:
